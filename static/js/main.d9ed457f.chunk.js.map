{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","Statistics","good","neutral","bad","totalFeedback","positiveFeedback","className","s","item","FeedbackOptions","options","onLeaveFeedback","buttons","Object","keys","map","btn","name","type","onClick","button","toUpperCase","slice","Notification","message","App","state","handleIncrement","evt","setState","prevState","target","this","total","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iSAiBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCwCQC,EA3CI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,cACAC,EACI,EADJA,iBAEA,OACE,mCACE,qBAAIC,UAAWC,IAAEC,KAAjB,UACE,+BACE,yCACA,+BAAOP,OAET,+BACE,4CACA,+BAAOC,OAET,+BACE,wCACA,+BAAOC,OAET,+BACE,0CACA,+BAAOC,OAET,+BACE,sDACA,iCAAOC,EAAP,gB,gBCHKI,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAUC,OAAOC,KAAKJ,GAE5B,OACE,mCACGE,EAAQG,KAAI,SAAAC,GAAG,OACd,wBAEEC,KAAMD,EACNE,KAAK,SACLC,QAASR,EACTL,UAAWC,IAAEa,OALf,SAOGJ,EAAI,GAAGK,cAAgBL,EAAIM,MAAM,IAN7BN,SCFAO,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC2D3BC,E,4MAtDbC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,gBAAkB,SAAAC,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAIG,OAAOd,KAAOa,EAAUF,EAAIG,OAAOd,MAAQ,O,wDAIpD,WAEE,OADce,KAAKN,MAAMzB,KAAO+B,KAAKN,MAAMxB,QAAU8B,KAAKN,MAAMvB,M,6CAIlE,WACE,IAAM8B,EAAQD,KAAKN,MAAMzB,KAAO+B,KAAKN,MAAMxB,QAAU8B,KAAKN,MAAMvB,IAChE,OAAO6B,KAAKN,MAAMzB,KAAOiC,KAAKC,MAAyB,IAAlBH,KAAKN,MAAMzB,KAAcgC,GAAS,I,oBAGzE,WAAU,IAAD,EACwBD,KAAKN,MAA5BzB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAgB4B,KAAKI,qBACrB/B,EAAmB2B,KAAKK,kCAE9B,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CACEY,QAASsB,KAAKN,MACdf,gBAAiBqB,KAAKL,oBAI1B,cAAC,EAAD,CAAS7B,MAAM,YAAf,SACoB,GAAjBM,EACC,cAAC,EAAD,CAAcoB,QAAQ,sBAEtB,cAAC,EAAD,CACEvB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,cAAeA,EACfC,iBAAkBA,a,GA9CdiC,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.d9ed457f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  totalFeedback,\n  positiveFeedback,\n}) => {\n  return (\n    <>\n      <ul className={s.item}>\n        <li>\n          <span>Good:</span>\n          <span>{good}</span>\n        </li>\n        <li>\n          <span>Neutral:</span>\n          <span>{neutral}</span>\n        </li>\n        <li>\n          <span>Bad:</span>\n          <span>{bad}</span>\n        </li>\n        <li>\n          <span>Total:</span>\n          <span>{totalFeedback}</span>\n        </li>\n        <li>\n          <span>Positive feedback:</span>\n          <span>{positiveFeedback}%</span>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalFeedback: PropTypes.number.isRequired,\n  positiveFeedback: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const buttons = Object.keys(options);\n\n  return (\n    <>\n      {buttons.map(btn => (\n        <button\n          key={btn}\n          name={btn}\n          type=\"button\"\n          onClick={onLeaveFeedback}\n          className={s.button}\n        >\n          {btn[0].toUpperCase() + btn.slice(1)}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = evt => {\n    this.setState(prevState => ({\n      [evt.target.name]: prevState[evt.target.name] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return this.state.good ? Math.round((this.state.good * 100) / total) : 0;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistic\">\n          {totalFeedback == 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              totalFeedback={totalFeedback}\n              positiveFeedback={positiveFeedback}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};"],"sourceRoot":""}